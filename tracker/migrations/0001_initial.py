# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-13 05:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128, unique=True, verbose_name=b'Name')),
                ('slug', models.SlugField(unique=True, verbose_name=b'Slug')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'areas',
            },
        ),
        migrations.CreateModel(
            name='EmergencyRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=128, verbose_name=b'Full name')),
                ('address', models.CharField(db_index=True, help_text=b'Street and number', max_length=255, verbose_name=b'Your Address')),
                ('district', models.CharField(db_index=True, help_text=b'I.e. Cupecoy, Cayhill, etc.,', max_length=128, verbose_name=b'District')),
                ('contact_numbers', models.CharField(blank=True, max_length=128, null=True, verbose_name=b'Contact Numbers')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name=b'Created on')),
                ('resolved', models.BooleanField(db_index=True, default=False, verbose_name=b'Request Resolved')),
                ('has_24_hours', models.IntegerField(choices=[(0, b'No'), (1, b'Yes')], db_index=True, default=1, verbose_name=b'Will you survive the next 24 hours?')),
                ('has_injuries', models.IntegerField(choices=[(0, b'No'), (1, b'Yes')], db_index=True, default=0, verbose_name=b'Do you have a physical injury?')),
                ('has_rain_shelter', models.IntegerField(choices=[(0, b'No'), (1, b'Yes')], db_index=True, default=0, verbose_name=b'Does your location have shelter from the rain?')),
                ('has_lod_situation', models.IntegerField(choices=[(0, b'No'), (1, b'Yes')], db_index=True, default=0, verbose_name=b'Are any of you in a life or death situation?')),
                ('additional_persons', models.TextField(blank=True, help_text=b'Who else is at your location?', null=True, verbose_name=b'Additional Persons')),
                ('days_of_food', models.IntegerField(choices=[(0, b'None'), (1, b'Enough for 1 day'), (2, b'Enough for 2 days'), (3, b'Enough for more than 3 days')], default=3, help_text=b'How many days of food supplies do you have?', verbose_name=b'Days of food')),
                ('days_of_water', models.IntegerField(choices=[(0, b'None'), (1, b'Enough for 1 day'), (2, b'Enough for 2 days'), (3, b'Enough for more than 3 days')], default=3, help_text=b'How many days of food supplies do you have?', verbose_name=b'Days of drinking water')),
                ('requires_medical_supplies', models.IntegerField(choices=[(0, b'No'), (1, b'Yes')], default=0, verbose_name=b'Does anyone need immediate medical supplies?')),
                ('medical_supplies', models.TextField(blank=True, help_text=b"If you answered 'Yes' to medical supplies, please specify the supplies you need.", null=True, verbose_name=b'Immediate medical supplies')),
                ('type_of_injuries', models.TextField(blank=True, help_text=b"If you answered 'Yes' to injuries, please specify the injuries.", null=True, verbose_name=b'Type of injuries')),
                ('request', models.TextField(verbose_name=b'In short, can you describe your emergency and/or request')),
                ('urgency_ranking', models.IntegerField(db_index=True, default=5, verbose_name=b'Urgency ranking')),
            ],
            options={
                'ordering': ['urgency_ranking', 'resolved'],
                'verbose_name_plural': 'Emergency Requests',
                'db_table': 'emergency_requests',
                'verbose_name': 'Emergency Request',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name=b'Age')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name=b'Name')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=b'images/', verbose_name=b'Image')),
                ('district', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'District')),
                ('address', models.CharField(blank=True, help_text=b"The person's address", max_length=255, null=True, verbose_name=b'Address')),
                ('phonenumber', models.CharField(blank=True, help_text=b"The person's phone number", max_length=75, null=True, verbose_name=b'Phone number')),
                ('safe', models.BooleanField(db_index=True, default=False, verbose_name=b'Safe')),
                ('marked_safe_by', models.CharField(blank=True, help_text=b'Name of the person checking this box', max_length=126, null=True, verbose_name=b'Marked safe by')),
                ('marked_safe_on', models.DateTimeField(blank=True, editable=False, null=True, verbose_name=b'Marked safe on')),
                ('missing_since', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Missing since')),
                ('requester_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Your Name')),
                ('requester_fb', models.URLField(blank=True, null=True, verbose_name=b'Your Facebook Profile')),
                ('requester_number', models.CharField(blank=True, max_length=75, null=True, verbose_name=b'Your Number')),
                ('requester_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name=b'Your Email')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Emergency Contact Name')),
                ('emergency_contact_number', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Emergency Contact Number')),
                ('extra_info', models.TextField(blank=True, null=True, verbose_name=b'Extra info')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name=b'Created on')),
                ('notified', models.BooleanField(default=False, editable=False, verbose_name=b'Notified')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.Area')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'persons',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name=b'Item name')),
            ],
            options={
                'db_table': 'supplies',
                'verbose_name': 'Supply',
                'verbose_name_plural': 'Supplies',
            },
        ),
        migrations.CreateModel(
            name='SupplyRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=128, verbose_name=b'Full name')),
                ('address', models.CharField(db_index=True, help_text=b'Street and number', max_length=255, verbose_name=b'Your Address')),
                ('district', models.CharField(db_index=True, help_text=b'I.e. Cupecoy, Cayhill, etc.,', max_length=128, verbose_name=b'District')),
                ('contact_numbers', models.CharField(blank=True, max_length=128, null=True, verbose_name=b'Contact Numbers')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name=b'Created on')),
                ('resolved', models.BooleanField(db_index=True, default=False, verbose_name=b'Request Resolved')),
                ('quantity', models.IntegerField(default=1, help_text=b'Indicate how many people these supplies need to cover', verbose_name=b'Amount of people')),
                ('dropoff_instructions', models.TextField(blank=True, help_text=b'I.e. The front door is obstructed, please use the back door.', null=True, verbose_name=b'Dropoff Instructions')),
                ('supplies', models.ManyToManyField(db_index=True, help_text=b"Select which supplies you're in need of", to='tracker.Supply')),
            ],
            options={
                'ordering': ['created_on', '-resolved'],
                'db_table': 'supply_requests',
                'verbose_name': 'Supply Request',
                'verbose_name_plural': 'Supply Requests',
            },
        ),
        migrations.CreateModel(
            name='SupplySharing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=128, verbose_name=b'Full name')),
                ('address', models.CharField(db_index=True, help_text=b'Street and number', max_length=255, verbose_name=b'Your Address')),
                ('district', models.CharField(db_index=True, help_text=b'I.e. Cupecoy, Cayhill, etc.,', max_length=128, verbose_name=b'District')),
                ('contact_numbers', models.CharField(blank=True, max_length=128, null=True, verbose_name=b'Contact Numbers')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name=b'Created on')),
                ('resolved', models.BooleanField(db_index=True, default=False, verbose_name=b'Request Resolved')),
                ('shareable_supplies', models.TextField(blank=True, help_text=b'Specify the type of supplies and their quantities. Every item that you have to spare can make a difference in someone elses life.', null=True, verbose_name=b'Shareable Supplies')),
                ('pickup_instructions', models.TextField(blank=True, help_text=b'I.e. The front door is obstructed, please use the back door.', null=True, verbose_name=b'Pickup Instructions')),
            ],
            options={
                'ordering': ['created_on', '-resolved'],
                'db_table': 'supply_sharing',
                'verbose_name': 'Supply Sharing',
                'verbose_name_plural': 'Supply Sharing',
            },
        ),
        migrations.AlterUniqueTogether(
            name='emergencyrequest',
            unique_together=set([('address', 'district', 'contact_numbers')]),
        ),
        migrations.AlterIndexTogether(
            name='emergencyrequest',
            index_together=set([('urgency_ranking', 'resolved')]),
        ),
    ]
